openapi: 3.0.0
info:
  title: Робот-пылесос
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1/
    description: "Dev server"
paths:
  /robots:
    get:
      summary: Получение списка роботов
      tags:
        - Robots
      operationId: getAllRobots
      responses:
        "200":
          description: Успешный ответ на запос
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Robots" 
        default:
          description: Всё остальное
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Error" 
    post:
      summary: Создание робота
      tags:
        - Robots
      operationId: createRobot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Robot"
      responses:
        "200":
          description: Успешный ответ
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Robots"
        "default":      
          description: Все остальное
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Error"
  /robot/{robotId}:
    delete:
      summary: Удаление робота по ID
      tags:
        - Robots
      operationId: deleteRobotByID
      parameters:
        - name: robotId
          in: path
          required: true
          description: ID робота
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Удаление прошло успешно
          content:
            aplication/json: {}
        "default":      
          description: Все остальное
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Error"
  /robot/{groupId}:
    get:
      summary: Получение списка роботов по группе
      tags:
        - Robots
      operationId: getRobotsByGroupId
      parameters:
        - name: groupId
          in: path
          required: true
          description: ID группы
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Успешный ответ на запрос
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Robots"
        default:
          description: Все остальное
          content:
            aplication/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Robot:
      type: object
      required:
        - id
        - model
        - version
        - status
        - fabric_number
        - resource
        - ip_adress
        - id_group
      properties:
        id:
          type: integer
          example: 1
        model:
          type: string
          example: "AAA"
        version:
          type: string
          example: "123.213.123d"
        status:
          type: string
          example: "worked"
        fabric_number:
          type: integer
          example: 123456
        resource:
          type: integer
          example: 75
        ip_adress:
          type: string
          example: "192.168.2.5"
        id_group:
          type: integer
          example: 1
    User:
      type: object
      required:
        - id
        - login
        - hash
      properties:
        id:
          type: integer
          example: 1
        login:
          type: string
          example: "Sergyk87"
        hash:
          type: integer
          example: 123456
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
    Robots:
      type: array
      items:
        $ref: "#/components/schemas/Robot"        
    Error:
      type: object
      required:
        - code
        - items
      properties:
        code:
          type: integer
        message:
          type: string
